{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressInsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ContractCallNotAllowed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "receivedAmount",
          "type": "uint256"
        }
      ],
      "name": "CumulativeSlippageTooHigh",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "required",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidContract",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NativeAssetTransferFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoSwapDataProvided",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoSwapFromZeroBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NoTransferToNullAddress",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NullAddrIsNotAValidSpender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NullAddrIsNotAnERC20Token",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyError",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SliceOutOfBounds",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "SliceOverflow",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "transactionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "dex",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "fromAssetId",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "toAssetId",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fromAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "AssetSwapped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "transactionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "integrator",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "referrer",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "fromAssetId",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "toAssetId",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fromAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toAmount",
          "type": "uint256"
        }
      ],
      "name": "GenericSwapCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "transactionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "integrator",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "referrer",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "fromAssetId",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "toAssetId",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fromAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toAmount",
          "type": "uint256"
        }
      ],
      "name": "SwappedGeneric",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "transactionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receivingAssetId",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "TransferCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "transactionId",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receivingAssetId",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "TransferRecovered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "transactionId",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "bridge",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "integrator",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "referrer",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sendingAssetId",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "destinationChainId",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "hasSourceSwaps",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "hasDestinationCall",
              "type": "bool"
            }
          ],
          "indexed": false,
          "internalType": "struct IStruct.BridgeData",
          "name": "bridgeData",
          "type": "tuple"
        }
      ],
      "name": "TransferStarted",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_dex",
          "type": "address"
        }
      ],
      "name": "addDex",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_signature",
          "type": "bytes4"
        }
      ],
      "name": "setFunctionApprovalBySignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_transactionId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_integrator",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_referrer",
          "type": "string"
        },
        {
          "internalType": "address payable",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_minAmount",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "callTo",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "approveTo",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "sendingAssetId",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "receivingAssetId",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "fromAmount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            },
            {
              "internalType": "bool",
              "name": "requiresDeposit",
              "type": "bool"
            }
          ],
          "internalType": "struct LibSwap.SwapData[]",
          "name": "_swapData",
          "type": "tuple[]"
        }
      ],
      "name": "swapTokensGeneric",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080806040523461001657611648908161001c8239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c9081634630a0d81461004a57508063536db266146100455763c561c1481461004057600080fd5b61019d565b610176565b60c03660031901126100eb5767ffffffffffffffff906024358281116100ee576100789036906004016100f2565b916044358481116100ee576100919036906004016100f2565b909461009b610136565b9260a4359182116100eb576100e76100cd88888888886100be3660048b01610145565b95909460843594600435610206565b6040516001600160a01b0390911681529081906020820190565b0390f35b80fd5b5080fd5b9181601f840112156101205782359167ffffffffffffffff8311610120576020838186019501011161012057565b600080fd5b6001600160a01b0381160361012057565b6064359061014382610125565b565b9181601f840112156101205782359167ffffffffffffffff8311610120576020808501948460051b01011161012057565b346101205760203660031901126101205761019b60043561019681610125565b61097b565b005b34610120576020366003190112610120576004356001600160e01b031981168103610120576001600160e01b03191660009081527f7d79ad5da1584bf455d60eb7b5b4c584ee120e2c141575abdc78caf49bc8efc860205260409020805460ff19166001179055005b9495989790929193967fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b6001815414610404576001905547973489039889116103db576001600160a01b03888116156103f25783156103e0576000198401908482116103db57610285606061027f6102c694888861047e565b016104a0565b61028e81610a74565b918116156103c4575b6102c1906102bc8b8d89896102ac8282610897565b936102b78383610af0565b61053a565b610a74565b61043b565b9a808c1061039f5750928261033c9a9b92897f32653f82ee152f31d3f77bbf90299b1dc9f7b72107e92d6a2d0f66582d544a869897966080610319606061027f61031261034b9b61042c565b888861047e565b9e8f95610327898689610ee3565b610336604061027f838961045e565b9561045e565b013594604051998a998a6104ce565b0390a247828111610384575b5050509061014360007fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b55565b610397926103919161043b565b90610f89565b388080610357565b6040516309d709cf60e21b81526004810191909152602481018c9052604490fd5b0390fd5b906103d36102c191349061043b565b919050610297565b610416565b604051630503c3ed60e01b8152600490fd5b604051631e4ec46b60e01b8152600490fd5b6040516329f745a760e01b8152600490fd5b634e487b7160e01b600052601160045260246000fd5b6000198101919082116103db57565b919082039182116103db57565b634e487b7160e01b600052603260045260246000fd5b90156104795780359060de1981360301821215610120570190565b610448565b91908110156104795760051b8101359060de1981360301821215610120570190565b356104aa81610125565b90565b908060209392818452848401376000828201840152601f01601f1916010190565b95936104ef60c09894926104fd949c9b9a979c60e08a5260e08a01916104ad565b9187830360208901526104ad565b6001600160a01b0398891660408601529188166060850152909616608083015260a08201520152565b80518210156104795760209160051b010190565b9193929092600185818097141560001461060857606090610573818861056d8561027f6105668561042c565b858561047e565b9861077f565b6000966001600160a01b03968716935b610593575b505050505050505050565b61059c8261042c565b8810156106035788886105b58561027f849c878761047e565b868a8216036105c7575b500197610583565b6105e46105d382610a74565b6105dd848b610526565b519061043b565b89816105f2575b50506105bf565b6105fb92610ee3565b3880896105eb565b610588565b9250505060005b81811061061d575050505050565b61062881838661047e565b60406106456106388284016104a0565b6001600160a01b03161590565b80156106fd575b806106e6575b80610680575b1561067057509061066a869285611098565b0161060f565b51632514e60160e21b8152600490fd5b506106e16106a361069d61069760a0860186610712565b90610745565b90610753565b6001600160e01b03191660009081527f7d79ad5da1584bf455d60eb7b5b4c584ee120e2c141575abdc78caf49bc8efc8602052604090205460ff1690565b610658565b506106f86106f3836104a0565b610a49565b610652565b5061070d6106f3602084016104a0565b61064c565b903590601e1981360301821215610120570180359067ffffffffffffffff82116101205760200191813603831361012057565b906004116101205790600490565b6001600160e01b0319903581811693926004811061077057505050565b60040360031b82901b16169150565b90929160005b818110610793575050509050565b61079e81838761047e565b6040808201356107ad81610125565b6001600160a01b0316158015610811575b806107ff575b806107e3575b156106705750906107dd60019285611098565b01610785565b506107fa6106a361069d61069760a0860186610712565b6107ca565b5061080c6106f3836104a0565b6107c4565b506108216106f3602084016104a0565b6107be565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761085857604052565b610826565b90601f8019910116810190811067ffffffffffffffff82111761085857604052565b67ffffffffffffffff81116108585760051b60200190565b6108a08261087f565b916108ae604051938461085d565b808352601f196108bd8261087f565b0136602085013760005b8181106108d45750505090565b60606108e182848661047e565b01356108ec81610125565b6108f581610a74565b6108ff8387610526565b526001600160a01b031615610917575b6001016108c7565b6109218185610526565b51903482039182116103db5760019161093a8287610526565b52905061090f565b6001600160a01b031660009081527f7d79ad5da1584bf455d60eb7b5b4c584ee120e2c141575abdc78caf49bc8efc76020526040902090565b6001600160a01b038116908115610a3757803b15610a375760ff61099e82610942565b5416610a33576109ad90610942565b805460ff191660011790557f7d79ad5da1584bf455d60eb7b5b4c584ee120e2c141575abdc78caf49bc8efcb805490680100000000000000008210156108585760018201808255821015610479576000527fc8c330445185738a85c350c82846481593de1c6208b21dcb0c057f5e1e05a6b60180546001600160a01b0319169091179055565b5050565b6040516303777f6960e51b8152600490fd5b610a5460ff91610942565b541690565b90816020910312610120575190565b6040513d6000823e3d90fd5b6000906001600160a01b031680610a8b5750504790565b6020602491604051928380926370a0823160e01b82523060048301525afa918215610ae15791610ab9575090565b6104aa915060203d8111610ada575b610ad2818361085d565b810190610a59565b503d610ac8565b610a68565b8015150361012057565b90600090815b818110610b035750505050565b610b0e81838661047e565b60c0810135610b1c81610ae6565b610b2a575b50600101610af6565b60409060808282013591610b3d83610125565b0135908115610c14576001600160a01b03811680610b785750503410610b6857506001905b90610b21565b5163162908e360e11b8152600490fd5b83516370a0823160e01b81523360048083019190915293949293926020929091908390829060249082905afa928315610ae1578993610bf5575b5050848210610bd45750505060019291610bcf9130903390610c25565b610b62565b5163cf47918160e01b81529182019384526020840152918291506040010390fd5b610c0c929350803d10610ada57610ad2818361085d565b903880610bb2565b825163162908e360e11b8152600490fd5b6001600160a01b0390811692908315610d4257811615610d30576040516370a0823160e01b8082526001600160a01b03831660048301526020949092908583602481845afa938415610ae157878794600096610d07575b50610c8d9084610cb3979885610d54565b6040519081526001600160a01b0390921660048301529092839190829081906024820190565b03915afa908115610ae157610cd193600092610cea575b505061043b565b03610cd857565b60405163162908e360e11b8152600490fd5b610d009250803d10610ada57610ad2818361085d565b3880610cca565b610cb396509084610d27610c8d93883d8a11610ada57610ad2818361085d565b97505090610c7c565b6040516321f7434560e01b8152600490fd5b60405163346fafc360e21b8152600490fd5b6040516323b872dd60e01b60208201526001600160a01b03928316602482015292909116604483015260648083019390935291815260a081019181831067ffffffffffffffff8411176108585761014392604052610dc2565b9081602091031261012057516104aa81610ae6565b600080610deb9260018060a01b03169360208151910182865af1610de4610e50565b9083610e80565b8051908115159182610e19575b5050610e015750565b60249060405190635274afe760e01b82526004820152fd5b610e2c9250602080918301019101610dad565b153880610df8565b67ffffffffffffffff811161085857601f01601f191660200190565b3d15610e7b573d90610e6182610e34565b91610e6f604051938461085d565b82523d6000602084013e565b606090565b90610ea75750805115610e9557805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580610eda575b610eb8575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15610eb0565b6001600160a01b039081169392919084610f035750610143929350610f89565b168015610d30576040516370a0823160e01b815230600482015293602085602481845afa948515610ae157600095610f69575b50848311610f4957610143939450610feb565b60405163cf47918160e01b81526004810184905260248101869052604490fd5b610f8291955060203d8111610ada57610ad2818361085d565b9338610f36565b6001600160a01b03168015610d3057478211610fca57600080809381935af1610fb0610e50565b5015610fb857565b604051635a04673760e01b8152600490fd5b5060405163cf47918160e01b81526004810191909152476024820152604490fd5b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152608081019167ffffffffffffffff8311828410176108585761014392604052610dc2565b908092918237016000815290565b60005b83811061105c5750506000910152565b818101518382015260200161104c565b6040916020825261108c8151809281602086015260208686019101611049565b601f01601f1916010190565b9190916110b46110b06110aa856104a0565b3b151590565b1590565b610a3757608083013590811561127d5760408401906110d5610638836104a0565b600090156112775750825b6110ec6102bc846104a0565b9060608701946110fe6102bc876104a0565b928115611244575b82811061122357506000809161111b8a6104a0565b9061112960a08c018c610712565b919061113a6040518094819361103b565b03925af196611147610e50565b97156111ff577f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38969750906111f393929161119961119361119361118d6102bc8b6104a0565b936104a0565b976104a0565b92808211156111f8576111ab9161043b565b915b6040519687964295889360c0959298979693919860e0860199865260018060a01b0392838092166020880152166040860152166060840152608083015260a08201520152565b0390a1565b50916111ad565b6103c061120b896114dd565b60405162461bcd60e51b81529182916004830161106c565b60405163cf47918160e01b8152600481018490526024810191909152604490fd5b61127283611260611254896104a0565b6001600160a01b031690565b61126c60208d016104a0565b9061128f565b611106565b926110e0565b60405163391b81e760e21b8152600490fd5b916001600160a01b038084169081156113345783161561132257604051636eb1769f60e11b81523060048201526001600160a01b038416602482015290602090829060449082905afa908115610ae157600091611304575b50106112f1575050565b816112ff826101439461133b565b611446565b61131c915060203d8111610ada57610ad2818361085d565b386112e7565b6040516363ba9bff60e01b8152600490fd5b5050505050565b60405163095ea7b360e01b602082018181526001600160a01b038516602484015260006044840152909391929183606481015b0391611382601f199384810187528661085d565b84516001600160a01b03851691600091829182855af1906113a1610e50565b82611414575b5081611409575b50156113bb575050505050565b60405160208101959095526001600160a01b0316602485015260006044850152606490810184526113ff936113fa916113f4908261085d565b82610dc2565b610dc2565b3880808080611334565b90503b1515386113ae565b8051919250811591821561142c575b505090386113a7565b61143f9250602080918301019101610dad565b3880611423565b60405163095ea7b360e01b602082018181526001600160a01b038516602484015260001960448401529093919291836064810161136e565b6020818303126101205780519067ffffffffffffffff8211610120570181601f820112156101205780516114b181610e34565b926114bf604051948561085d565b81845260208284010111610120576104aa9160208085019101611049565b9060448251106115bb5781519160031990818401908482116103db5781611503816115f6565b106115a957805161151383611604565b1161159757816115435750505090506104aa60405160008152602081016040525b6020808251830101910161147e565b9390600460405193601f8316801560051b9182828801019586010197010101945b80831061158457508252601f01601f19166040529091506104aa90611534565b8551835260209586019590920191611564565b604051633b99b53d60e01b8152600490fd5b6040516323d5783d60e11b8152600490fd5b90506040516115c98161083c565b601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b90601f82018092116103db57565b60040190816004116103db5756fea2646970667358221220d9dc8c66602570468de090e115d57005b0a2751fe925c839bc859712e6f939e564736f6c63430008140033",
    "sourceMap": "750:1866:51:-:0;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436101561001257600080fd5b6000803560e01c9081634630a0d81461004a57508063536db266146100455763c561c1481461004057600080fd5b61019d565b610176565b60c03660031901126100eb5767ffffffffffffffff906024358281116100ee576100789036906004016100f2565b916044358481116100ee576100919036906004016100f2565b909461009b610136565b9260a4359182116100eb576100e76100cd88888888886100be3660048b01610145565b95909460843594600435610206565b6040516001600160a01b0390911681529081906020820190565b0390f35b80fd5b5080fd5b9181601f840112156101205782359167ffffffffffffffff8311610120576020838186019501011161012057565b600080fd5b6001600160a01b0381160361012057565b6064359061014382610125565b565b9181601f840112156101205782359167ffffffffffffffff8311610120576020808501948460051b01011161012057565b346101205760203660031901126101205761019b60043561019681610125565b61097b565b005b34610120576020366003190112610120576004356001600160e01b031981168103610120576001600160e01b03191660009081527f7d79ad5da1584bf455d60eb7b5b4c584ee120e2c141575abdc78caf49bc8efc860205260409020805460ff19166001179055005b9495989790929193967fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b6001815414610404576001905547973489039889116103db576001600160a01b03888116156103f25783156103e0576000198401908482116103db57610285606061027f6102c694888861047e565b016104a0565b61028e81610a74565b918116156103c4575b6102c1906102bc8b8d89896102ac8282610897565b936102b78383610af0565b61053a565b610a74565b61043b565b9a808c1061039f5750928261033c9a9b92897f32653f82ee152f31d3f77bbf90299b1dc9f7b72107e92d6a2d0f66582d544a869897966080610319606061027f61031261034b9b61042c565b888861047e565b9e8f95610327898689610ee3565b610336604061027f838961045e565b9561045e565b013594604051998a998a6104ce565b0390a247828111610384575b5050509061014360007fa65bb2f450488ab0858c00edc14abc5297769bf42adb48cfb77752890e8b697b55565b610397926103919161043b565b90610f89565b388080610357565b6040516309d709cf60e21b81526004810191909152602481018c9052604490fd5b0390fd5b906103d36102c191349061043b565b919050610297565b610416565b604051630503c3ed60e01b8152600490fd5b604051631e4ec46b60e01b8152600490fd5b6040516329f745a760e01b8152600490fd5b634e487b7160e01b600052601160045260246000fd5b6000198101919082116103db57565b919082039182116103db57565b634e487b7160e01b600052603260045260246000fd5b90156104795780359060de1981360301821215610120570190565b610448565b91908110156104795760051b8101359060de1981360301821215610120570190565b356104aa81610125565b90565b908060209392818452848401376000828201840152601f01601f1916010190565b95936104ef60c09894926104fd949c9b9a979c60e08a5260e08a01916104ad565b9187830360208901526104ad565b6001600160a01b0398891660408601529188166060850152909616608083015260a08201520152565b80518210156104795760209160051b010190565b9193929092600185818097141560001461060857606090610573818861056d8561027f6105668561042c565b858561047e565b9861077f565b6000966001600160a01b03968716935b610593575b505050505050505050565b61059c8261042c565b8810156106035788886105b58561027f849c878761047e565b868a8216036105c7575b500197610583565b6105e46105d382610a74565b6105dd848b610526565b519061043b565b89816105f2575b50506105bf565b6105fb92610ee3565b3880896105eb565b610588565b9250505060005b81811061061d575050505050565b61062881838661047e565b60406106456106388284016104a0565b6001600160a01b03161590565b80156106fd575b806106e6575b80610680575b1561067057509061066a869285611098565b0161060f565b51632514e60160e21b8152600490fd5b506106e16106a361069d61069760a0860186610712565b90610745565b90610753565b6001600160e01b03191660009081527f7d79ad5da1584bf455d60eb7b5b4c584ee120e2c141575abdc78caf49bc8efc8602052604090205460ff1690565b610658565b506106f86106f3836104a0565b610a49565b610652565b5061070d6106f3602084016104a0565b61064c565b903590601e1981360301821215610120570180359067ffffffffffffffff82116101205760200191813603831361012057565b906004116101205790600490565b6001600160e01b0319903581811693926004811061077057505050565b60040360031b82901b16169150565b90929160005b818110610793575050509050565b61079e81838761047e565b6040808201356107ad81610125565b6001600160a01b0316158015610811575b806107ff575b806107e3575b156106705750906107dd60019285611098565b01610785565b506107fa6106a361069d61069760a0860186610712565b6107ca565b5061080c6106f3836104a0565b6107c4565b506108216106f3602084016104a0565b6107be565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761085857604052565b610826565b90601f8019910116810190811067ffffffffffffffff82111761085857604052565b67ffffffffffffffff81116108585760051b60200190565b6108a08261087f565b916108ae604051938461085d565b808352601f196108bd8261087f565b0136602085013760005b8181106108d45750505090565b60606108e182848661047e565b01356108ec81610125565b6108f581610a74565b6108ff8387610526565b526001600160a01b031615610917575b6001016108c7565b6109218185610526565b51903482039182116103db5760019161093a8287610526565b52905061090f565b6001600160a01b031660009081527f7d79ad5da1584bf455d60eb7b5b4c584ee120e2c141575abdc78caf49bc8efc76020526040902090565b6001600160a01b038116908115610a3757803b15610a375760ff61099e82610942565b5416610a33576109ad90610942565b805460ff191660011790557f7d79ad5da1584bf455d60eb7b5b4c584ee120e2c141575abdc78caf49bc8efcb805490680100000000000000008210156108585760018201808255821015610479576000527fc8c330445185738a85c350c82846481593de1c6208b21dcb0c057f5e1e05a6b60180546001600160a01b0319169091179055565b5050565b6040516303777f6960e51b8152600490fd5b610a5460ff91610942565b541690565b90816020910312610120575190565b6040513d6000823e3d90fd5b6000906001600160a01b031680610a8b5750504790565b6020602491604051928380926370a0823160e01b82523060048301525afa918215610ae15791610ab9575090565b6104aa915060203d8111610ada575b610ad2818361085d565b810190610a59565b503d610ac8565b610a68565b8015150361012057565b90600090815b818110610b035750505050565b610b0e81838661047e565b60c0810135610b1c81610ae6565b610b2a575b50600101610af6565b60409060808282013591610b3d83610125565b0135908115610c14576001600160a01b03811680610b785750503410610b6857506001905b90610b21565b5163162908e360e11b8152600490fd5b83516370a0823160e01b81523360048083019190915293949293926020929091908390829060249082905afa928315610ae1578993610bf5575b5050848210610bd45750505060019291610bcf9130903390610c25565b610b62565b5163cf47918160e01b81529182019384526020840152918291506040010390fd5b610c0c929350803d10610ada57610ad2818361085d565b903880610bb2565b825163162908e360e11b8152600490fd5b6001600160a01b0390811692908315610d4257811615610d30576040516370a0823160e01b8082526001600160a01b03831660048301526020949092908583602481845afa938415610ae157878794600096610d07575b50610c8d9084610cb3979885610d54565b6040519081526001600160a01b0390921660048301529092839190829081906024820190565b03915afa908115610ae157610cd193600092610cea575b505061043b565b03610cd857565b60405163162908e360e11b8152600490fd5b610d009250803d10610ada57610ad2818361085d565b3880610cca565b610cb396509084610d27610c8d93883d8a11610ada57610ad2818361085d565b97505090610c7c565b6040516321f7434560e01b8152600490fd5b60405163346fafc360e21b8152600490fd5b6040516323b872dd60e01b60208201526001600160a01b03928316602482015292909116604483015260648083019390935291815260a081019181831067ffffffffffffffff8411176108585761014392604052610dc2565b9081602091031261012057516104aa81610ae6565b600080610deb9260018060a01b03169360208151910182865af1610de4610e50565b9083610e80565b8051908115159182610e19575b5050610e015750565b60249060405190635274afe760e01b82526004820152fd5b610e2c9250602080918301019101610dad565b153880610df8565b67ffffffffffffffff811161085857601f01601f191660200190565b3d15610e7b573d90610e6182610e34565b91610e6f604051938461085d565b82523d6000602084013e565b606090565b90610ea75750805115610e9557805190602001fd5b604051630a12f52160e11b8152600490fd5b81511580610eda575b610eb8575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b15610eb0565b6001600160a01b039081169392919084610f035750610143929350610f89565b168015610d30576040516370a0823160e01b815230600482015293602085602481845afa948515610ae157600095610f69575b50848311610f4957610143939450610feb565b60405163cf47918160e01b81526004810184905260248101869052604490fd5b610f8291955060203d8111610ada57610ad2818361085d565b9338610f36565b6001600160a01b03168015610d3057478211610fca57600080809381935af1610fb0610e50565b5015610fb857565b604051635a04673760e01b8152600490fd5b5060405163cf47918160e01b81526004810191909152476024820152604490fd5b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152608081019167ffffffffffffffff8311828410176108585761014392604052610dc2565b908092918237016000815290565b60005b83811061105c5750506000910152565b818101518382015260200161104c565b6040916020825261108c8151809281602086015260208686019101611049565b601f01601f1916010190565b9190916110b46110b06110aa856104a0565b3b151590565b1590565b610a3757608083013590811561127d5760408401906110d5610638836104a0565b600090156112775750825b6110ec6102bc846104a0565b9060608701946110fe6102bc876104a0565b928115611244575b82811061122357506000809161111b8a6104a0565b9061112960a08c018c610712565b919061113a6040518094819361103b565b03925af196611147610e50565b97156111ff577f7bfdfdb5e3a3776976e53cb0607060f54c5312701c8cba1155cc4d5394440b38969750906111f393929161119961119361119361118d6102bc8b6104a0565b936104a0565b976104a0565b92808211156111f8576111ab9161043b565b915b6040519687964295889360c0959298979693919860e0860199865260018060a01b0392838092166020880152166040860152166060840152608083015260a08201520152565b0390a1565b50916111ad565b6103c061120b896114dd565b60405162461bcd60e51b81529182916004830161106c565b60405163cf47918160e01b8152600481018490526024810191909152604490fd5b61127283611260611254896104a0565b6001600160a01b031690565b61126c60208d016104a0565b9061128f565b611106565b926110e0565b60405163391b81e760e21b8152600490fd5b916001600160a01b038084169081156113345783161561132257604051636eb1769f60e11b81523060048201526001600160a01b038416602482015290602090829060449082905afa908115610ae157600091611304575b50106112f1575050565b816112ff826101439461133b565b611446565b61131c915060203d8111610ada57610ad2818361085d565b386112e7565b6040516363ba9bff60e01b8152600490fd5b5050505050565b60405163095ea7b360e01b602082018181526001600160a01b038516602484015260006044840152909391929183606481015b0391611382601f199384810187528661085d565b84516001600160a01b03851691600091829182855af1906113a1610e50565b82611414575b5081611409575b50156113bb575050505050565b60405160208101959095526001600160a01b0316602485015260006044850152606490810184526113ff936113fa916113f4908261085d565b82610dc2565b610dc2565b3880808080611334565b90503b1515386113ae565b8051919250811591821561142c575b505090386113a7565b61143f9250602080918301019101610dad565b3880611423565b60405163095ea7b360e01b602082018181526001600160a01b038516602484015260001960448401529093919291836064810161136e565b6020818303126101205780519067ffffffffffffffff8211610120570181601f820112156101205780516114b181610e34565b926114bf604051948561085d565b81845260208284010111610120576104aa9160208085019101611049565b9060448251106115bb5781519160031990818401908482116103db5781611503816115f6565b106115a957805161151383611604565b1161159757816115435750505090506104aa60405160008152602081016040525b6020808251830101910161147e565b9390600460405193601f8316801560051b9182828801019586010197010101945b80831061158457508252601f01601f19166040529091506104aa90611534565b8551835260209586019590920191611564565b604051633b99b53d60e01b8152600490fd5b6040516323d5783d60e11b8152600490fd5b90506040516115c98161083c565b601d81527f5472616e73616374696f6e2072657665727465642073696c656e746c79000000602082015290565b90601f82018092116103db57565b60040190816004116103db5756fea2646970667358221220d9dc8c66602570468de090e115d57005b0a2751fe925c839bc859712e6f939e564736f6c63430008140033",
    "sourceMap": "750:1866:51:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;750:1866:51;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1922:7;750:1866;;;;;;;;;;;:::i;:::-;;;;;;;;;1922:7;:::i;:::-;750:1866;;-1:-1:-1;;;;;750:1866:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;;;;750:1866:51;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;750:1866:51;;;;944:4;750:1866;;;;;:::i;:::-;944:4;:::i;:::-;750:1866;;;;;;;-1:-1:-1;;750:1866:51;;;;;;-1:-1:-1;;;;;;750:1866:51;;;;;;-1:-1:-1;;;;;;750:1866:51;;;;;3052:31:84;750:1866:51;;;;;;;-1:-1:-1;;750:1866:51;3097:4:84;750:1866:51;;;;608:223:47;;;;;;;;;;296:37;577:1;750:1866:51;;705:20:47;701:50;;577:1;;;3762:21:48;3786:9;;750:1866:51;;;;;;;-1:-1:-1;;;;;750:1866:51;;;884:18:96;1941:87:51;;4735:13:48;;4731:71;;-1:-1:-1;;750:1866:51;;;;;;;;4835:37:48;;:20;5271:53;4835:20;;;;:::i;:::-;:37;;:::i;:::-;4907:36;;;:::i;:::-;750:1866:51;;;5602:25:86;4954:94:48;;608:223:47;5271:36:48;5093:22;7563:992;5093:22;;;;;;;;:::i;:::-;5149:6;;;;;:::i;:::-;7563:992;:::i;:::-;5271:36;:::i;:::-;:53;:::i;:::-;5339:23;;;;5335:110;;2176:20:51;;;2512:12;2176:20;;;;2308:266;2176:20;;;2512:23;2166:48;4835:37:48;2166:31:51;2176:20;2308:266;2176:20;;:::i;:::-;2166:31;;;:::i;:48::-;2276:15;;;;;;;;:::i;:::-;2441:27;;:12;;;;:::i;:27::-;2512:12;;:::i;:::-;:23;750:1866;;2441:27;750:1866;2308:266;;;;;:::i;:::-;;;;3839:21:48;3875:29;;;3871:155;;608:223:47;790:1;;;801:23;;534:1;296:37;577:1;;3871:155:48;6266:6:86;3985:29:48;;;;:::i;:::-;6266:6:86;;:::i;:::-;3871:155:48;;;;;5335:110;750:1866:51;;-1:-1:-1;;;5385:49:48;;;;;750:1866:51;;;;;;;;;;;;5385:49:48;;;;;4954:94;3786:9;5010:27;5271:36;3786:9;;5010:27;;:::i;:::-;4954:94;;;;;750:1866:51;;:::i;4731:71:48:-;750:1866:51;;-1:-1:-1;;;4771:20:48;;;;;1941:87:51;750:1866;;-1:-1:-1;;;2000:17:51;;;;;701:50:47;750:1866:51;;-1:-1:-1;;;734:17:47;;;;;750:1866:51;;;;;;;;;;;;;-1:-1:-1;;750:1866:51;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;750:1866:51;;;;;;;;-1:-1:-1;;750:1866:51;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;750:1866:51;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;1063:950:48:-;;;;;;1288:1;1276:13;;;;;;1272:735;1288:1;;;1326:37;1333:12;7563:992;1333:12;;1326:37;1333:12;1326:20;1333:12;;;:::i;:::-;1326:20;;;:::i;:37::-;7563:992;;:::i;:::-;-1:-1:-1;;;;;;;750:1866:51;;;;1288:1:48;;;1426:539;1272:735;;;;;;;;;1063:950::o;1431:13::-;1450:12;;;:::i;:::-;1446:16;;;;;1502:9;;:26;:9;;;;;;;:::i;:26::-;750:1866:51;;;;1595:22:48;1591:289;;1431:13;750:1866:51;;1431:13:48;;;1591:289;1654:54;:32;;;:::i;:::-;1689:19;;;;:::i;:::-;750:1866:51;1654:54:48;;:::i;:::-;1734:14;;1730:132;;1591:289;;;;;1730:132;1828:10;;;:::i;:::-;1730:132;;;;;1446:16;;;1272:735;7877:13;;;;7889:1;7892:12;;;;;;1272:735;;;;;1063:950::o;7877:13::-;7961:9;;;;;:::i;:::-;8078:26;8055:50;8078:26;;;;;:::i;:::-;-1:-1:-1;;;;;750:1866:51;5602:25:86;;5516:118;8055:50:48;:135;;;;7877:13;8029:237;;;7877:13;8029:329;;;7877:13;8006:370;7985:437;;8466:11;;;;;;;:::i;:::-;750:1866:51;7877:13:48;;7985:437;750:1866:51;-1:-1:-1;;;8398:24:48;;;;;8029:329;8332:20;8294:64;8325:32;8332:24;:20;;;;;;:::i;:::-;:24;;:::i;:::-;8325:32;;:::i;:::-;-1:-1:-1;;;;;;750:1866:51;;;;;3052:31:84;750:1866:51;;;;;;;;;1149:133:84;8294:64:48;8029:329;;:237;8247:18;8216:50;8247:18;;;:::i;:::-;8216:50;:::i;:::-;8029:237;;8055:135;8168:21;8137:53;8168:21;;;;;:::i;8137:53::-;8055:135;;750:1866:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;8354:1:48;750:1866:51;;;;8354:1:48;750:1866:51;:::o;:::-;-1:-1:-1;;;;;;750:1866:51;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;750:1866:51:o;7563:992:48:-;;;;7889:1;7892:12;;;;;;7563:992;;;;;:::o;7877:13::-;7961:9;;;;;:::i;:::-;8078:26;;;;750:1866:51;;;;:::i;:::-;-1:-1:-1;;;;;750:1866:51;5602:25:86;8055:135:48;;;;7877:13;8029:237;;;7877:13;8029:329;;;7877:13;8006:370;7985:437;;8466:11;;;750:1866:51;8466:11:48;;;:::i;:::-;750:1866:51;7877:13:48;;8029:329;8332:20;8294:64;8325:32;8332:24;:20;750:1866:51;8332:20:48;;;;:::i;8294:64::-;8029:329;;:237;8247:18;8216:50;8247:18;;;:::i;8216:50::-;8029:237;;8055:135;8168:21;8137:53;8168:21;;;;;:::i;8137:53::-;8055:135;;750:1866:51;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;9987:585:48:-;750:1866:51;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;750:1866:51;;;:::i;:::-;;;;;;;-1:-1:-1;10243:12:48;;;;;;10550:15;;;9987:585;:::o;10228:13::-;10280:26;:9;;;;;:::i;:::-;:26;750:1866:51;;;;:::i;:::-;10334:29:48;;;:::i;:::-;10320:43;;;;:::i;:::-;750:1866:51;-1:-1:-1;;;;;750:1866:51;5602:25:86;10378:92:48;;10228:13;750:1866:51;;10228:13:48;;10378:92;10431:24;;;;:::i;:::-;750:1866:51;10446:9:48;;750:1866:51;;;;;;;;10431:24:48;;;;;:::i;:::-;750:1866:51;10378:92:48;;;;750:1866:51;-1:-1:-1;;;;;750:1866:51;;;;;344:35:84;750:1866:51;;;;;;:::o;728:280:84:-;-1:-1:-1;;;;;750:1866:51;;;4083:23:84;;4079:53;;4147:21;;:26;4143:56;;750:1866:51;888:24:84;;;:::i;:::-;750:1866:51;;884:37:84;;931:24;;;:::i;:::-;750:1866:51;;-1:-1:-1;;750:1866:51;;;;;972:13:84;750:1866:51;;;;;;;;;;;;;;;;;;;;-1:-1:-1;750:1866:51;;;;;-1:-1:-1;;;;;;750:1866:51;;;;;;728:280:84:o;884:37::-;914:7;;:::o;4143:56::-;750:1866:51;;-1:-1:-1;;;4182:17:84;;;;;1149:133;1241:34;750:1866:51;1149:133:84;1241:34;:::i;:::-;750:1866:51;;1149:133:84;:::o;750:1866:51:-;;;;;;;;;;;:::o;:::-;;;;;;;;;;1223:185:86;832:1;;-1:-1:-1;;;;;750:1866:51;5602:25:86;750:1866:51;;1337:21:86;;;1223:185;:::o;1312:89::-;1361:40;750:1866:51;;;;;;;;;;;1361:40:86;;1395:4;1361:40;;;750:1866:51;1361:40:86;;;;;;;;;;1312:89;1223:185;:::o;1361:40::-;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;750:1866:51:-;;;;;;;:::o;4944:369:86:-;;5038:1;5026:13;;5041:16;;;;;;4944:369;;;;:::o;5026:13::-;5107:8;;;;;:::i;:::-;5133:20;;;750:1866:51;;;;:::i;:::-;5129:109:86;;5026:13;750:1866:51;;;5026:13:86;;5129:109;5186:19;;5207:15;5186:19;;;750:1866:51;;;;;:::i;:::-;5207:15:86;750:1866:51;4548:11:86;;;4544:39;;-1:-1:-1;;;;;750:1866:51;;5602:25:86;750:1866:51;;4639:9:86;;;:18;4635:46;;4593:339;750:1866:51;4593:339:86;;5129:109;;;4635:46;750:1866:51;-1:-1:-1;;;4666:15:86;;;;;4593:339;750:1866:51;;-1:-1:-1;;;4730:37:86;;4756:10;4730:37;;;;750:1866:51;;;;;;;;4730:37:86;;;750:1866:51;;;4730:37:86;;750:1866:51;;;;;;4730:37:86;;;;;;;;;;;4593:339;4785:16;;;;;4781:65;;4907:4;;;750:1866:51;4907:4:86;;4914:6;4907:4;;4756:10;;4914:6;;:::i;:::-;4593:339;;4781:65;750:1866:51;-1:-1:-1;;;4810:36:86;;;;;750:1866:51;;;;;;;;;;-1:-1:-1;750:1866:51;;5385:49:48;;;4730:37:86;;;;;;;-1:-1:-1;4730:37:86;;;;;;:::i;:::-;;;;;;4544:39;750:1866:51;;-1:-1:-1;;;4568:15:86;;;;;3918:546;-1:-1:-1;;;;;750:1866:51;;;;3918:546:86;5602:25;;4023:87;;750:1866:51;;4123:18:86;4119:81;;750:1866:51;;-1:-1:-1;;;4272:19:86;;;-1:-1:-1;;;;;750:1866:51;;4272:19:86;;;750:1866:51;4272:19:86;;750:1866:51;;;4272:19:86;750:1866:51;;;4272:19:86;;;;;;;;;;;832:1;4272:19;;;3918:546;4345:6;;;;4366:19;4345:6;;;;:::i;:::-;750:1866:51;;4366:19:86;;;-1:-1:-1;;;;;750:1866:51;;;4272:19:86;4366;;750:1866:51;;;;;-1:-1:-1;750:1866:51;;;;;;;;;4366:19:86;;;;;;;;;;:33;:19;832:1;4366:19;;;3918:546;4366:33;;;:::i;:::-;:43;4362:96;;3918:546::o;4362:96::-;750:1866:51;;-1:-1:-1;;;4432:15:86;;4272:19;;4432:15;4366:19;;;;;;-1:-1:-1;4366:19:86;;;;;;:::i;:::-;;;;;4272;4366;4272;;;;;4345:6;4272:19;;;;;;;;;;;:::i;:::-;;;;;;;4119:81;750:1866:51;;-1:-1:-1;;;4164:25:86;;;;;4023:87;750:1866:51;;-1:-1:-1;;;4072:27:86;;;;;1702:188:33;750:1866:51;;-1:-1:-1;;;1829:53:33;;;;-1:-1:-1;;;;;750:1866:51;;;1829:53:33;;;750:1866:51;;;;;;;;;;;;;;;;;1829:53:33;;;750:1866:51;;;;;;;;;;;;;1829:53:33;750:1866:51;;;1829:53:33;:::i;750:1866:51:-;;;;;;;;;;;;;:::i;4059:629:33:-;2847:1:34;4059:629:33;3510:55:34;4059:629:33;750:1866:51;;;;;;3462:31:34;;;;;;;;;;;;:::i;:::-;3510:55;;;:::i;:::-;750:1866:51;;4551:22:33;;;;:57;;;;4059:629;4547:135;;;;4059:629;:::o;4547:135::-;750:1866:51;;;;4631:40:33;;;;;;;;;750:1866:51;4631:40:33;4551:57;4578:30;;;3462:31:34;4578:30:33;;;;;;;;:::i;:::-;4577:31;4551:57;;;;750:1866:51;;;;;;;;-1:-1:-1;;750:1866:51;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;750:1866:51;;;;:::o;:::-;;;:::o;4625:582:34:-;;4797:8;;-1:-1:-1;750:1866:51;;5874:21:34;:17;;6046:142;;;;;;5870:383;750:1866:51;;-1:-1:-1;;;6225:17:34;;;;;4793:408;750:1866:51;;5045:22:34;:49;;;4793:408;5041:119;;5173:17;;:::o;5041:119::-;750:1866:51;;-1:-1:-1;;;5121:24:34;;-1:-1:-1;;;;;750:1866:51;;;5121:24:34;;;750:1866:51;;;5121:24:34;5045:49;5071:18;;;:23;5045:49;;6108:216:86;-1:-1:-1;;;;;750:1866:51;;;;6108:216:86;;;5602:25;750:1866:51;;6266:6:86;;;;;;:::i;6210:107::-;750:1866:51;3300:25:86;;3296:88;;750:1866:51;;-1:-1:-1;;;3417:40:86;;3451:4;3417:40;;;750:1866:51;;3417:40:86;750:1866:51;;;;3417:40:86;;;;;;;-1:-1:-1;3417:40:86;;;6210:107;3471:21;;;;3467:100;;3627:6;;;;;:::i;3467:100::-;750:1866:51;;-1:-1:-1;;;3515:41:86;;3417:40;3515:41;;750:1866:51;;;;;;;;;;;5385:49:48;3417:40:86;;;;;;;;;;;;;;;:::i;:::-;;;;;1618:465;-1:-1:-1;;;;;750:1866:51;1712:25:86;;1708:63;;1794:21;1785:30;;1781:118;;832:1;1985:33;;;;;;;;;:::i;:::-;;2032:8;2028:48;;1618:465::o;2028:48::-;750:1866:51;;-1:-1:-1;;;2049:27:86;;;;;1781:118;-1:-1:-1;750:1866:51;;-1:-1:-1;;;1838:50:86;;;;;750:1866:51;;;;1866:21:86;750:1866:51;;;;;;5385:49:48;1303:160:33;750:1866:51;;-1:-1:-1;;;1412:43:33;;;;-1:-1:-1;;;;;750:1866:51;;;1412:43:33;;;750:1866:51;;;;;;;;;1412:43:33;;;750:1866:51;;;;;;;;;;;;;1412:43:33;750:1866:51;;;1412:43:33;:::i;750:1866:51:-;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;750:1866:51;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;750:1866:51;;;;:::o;798:1541:95:-;;;;883:34;884:33;904:12;;;:::i;:::-;6568:67:86;6651:8;;6408:258;;884:33:95;883:34;;750:1866:51;883:34:95;879:64;;974:16;;;750:1866:51;1004:15:95;;;1000:51;;1106:20;;;;1083:44;1106:20;;;:::i;1083:44::-;904:12;;1083:67;;;;;;1197:44;1220:20;;;:::i;1197:44::-;1313:22;;;;;1290:46;1313:22;;;:::i;1290:46::-;1351:16;;;1347:136;;1083:67;1497:45;;;1493:148;;1745:12;904;1745;;;;;:::i;:::-;1783:14;;;;;;;:::i;:::-;750:1866:51;;;1106:20:95;750:1866:51;;;;;;:::i;:::-;1745:53:95;;;;;;;:::i;:::-;1812:8;;1808:115;;2016:316;1977:22;;;;2016:316;1977:22;;;2129;2095:20;2069:12;1954:46;1977:22;;;:::i;1954:46::-;2069:12;;:::i;:::-;2095:20;;:::i;2129:22::-;2195:98;:41;;;;;;2239;;;:::i;:::-;2195:98;;1106:20;750:1866:51;2307:15:95;;;;2016:316;;750:1866:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2016:316:95;;;;798:1541::o;2195:98::-;;;;;1808:115;1898:14;1859:25;;;:::i;:::-;1106:20;750:1866:51;-1:-1:-1;;;1898:14:95;;750:1866:51;;;1898:14:95;;;;:::i;1493:148::-;1106:20;750:1866:51;-1:-1:-1;;;1565:65:95;;;;;750:1866:51;;;;;;;;;;;;5385:49:48;1347:136:95;1455:16;1415:20;1408:28;1415:20;;;:::i;:::-;-1:-1:-1;;;;;750:1866:51;;;1408:28:95;1438:15;;;;;:::i;:::-;1455:16;;:::i;:::-;1347:136;;1083:67;;;;1000:51;750:1866:51;;-1:-1:-1;;;1028:23:95;;;;;2368:479:86;;-1:-1:-1;;;;;750:1866:51;;;;5602:25:86;;2461:68;;750:1866:51;;2542:23:86;2538:89;;750:1866:51;;-1:-1:-1;;;2641:41:86;;2667:4;2641:41;;;750:1866:51;-1:-1:-1;;;;;750:1866:51;;;;;;;2641:41:86;;750:1866:51;;;;;;2641:41:86;;;;;;;832:1;2641:41;;;2368:479;2641:50;;2637:204;;2368:479;;:::o;2637:204::-;2707:51;;;2821:8;2707:51;;:::i;:::-;2821:8;:::i;2641:41::-;;;;;;;;;;;;;;:::i;:::-;;;;2538:89;750:1866:51;;-1:-1:-1;;;2588:28:86;;;;;2461:68;2512:7;;;;;:::o;3296:380:33:-;750:1866:51;;-1:-1:-1;;;3411:47:33;;;;;;-1:-1:-1;;;;;750:1866:51;;3411:47:33;;;750:1866:51;832:1:86;750:1866:51;;;;;;;;3411:47:33;750:1866:51;;;;3411:47:33;;750:1866:51;3411:47:33;750:1866:51;;3411:47:33;;;;;;;;:::i;:::-;5615:25;;-1:-1:-1;;;;;750:1866:51;;;832:1:86;;;;;750:1866:51;5615:25:33;;;;;:::i;:::-;5657:69;;;3296:380;5657:103;;;;3296:380;3473:45;;3469:201;;3296:380;;;;;:::o;3469:201::-;750:1866:51;;3411:47:33;3561:43;;;;;;-1:-1:-1;;;;;750:1866:51;3411:47:33;3561:43;;750:1866:51;-1:-1:-1;750:1866:51;;;;;3561:43:33;;;;;3646:12;;3561:43;;;;750:1866:51;3561:43:33;:::i;:::-;;;:::i;:::-;3646:12;:::i;:::-;3469:201;;;;;;;5657:103;5730:26;;;:30;;5657:103;;;:69;750:1866:51;;;;-1:-1:-1;5669:22:33;;;:56;;;;5657:69;;;;;;;5669:56;5695:30;;;3411:47;5695:30;;;;;;;;:::i;:::-;5669:56;;;;3296:380;750:1866:51;;-1:-1:-1;;;3411:47:33;;;;;;-1:-1:-1;;;;;750:1866:51;;3411:47:33;;;750:1866:51;-1:-1:-1;;750:1866:51;;;;;;;;3411:47:33;750:1866:51;;;;3411:47:33;750:1866:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;137:473:96:-;;355:2;750:1866:51;;341:16:96;337:60;;750:1866:51;;;-1:-1:-1;;750:1866:51;;;;;;;;;;461:12:87;;;;:::i;:::-;:22;457:50;;750:1866:51;;537:16:87;;;:::i;:::-;-1:-1:-1;517:63:87;;624:2394;;;;;;;;530:32:96;624:2394:87;;-1:-1:-1;624:2394:87;;;;;;;;530:32:96;750:1866:51;;;530:32:96;;;;;;:::i;624:2394:87:-;;;444:1:96;624:2394:87;;;471:2;624:2394;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;624:2394:87;;471:2;624:2394;-1:-1:-1;;624:2394:87;;;;;-1:-1:-1;530:32:96;;624:2394:87;;;;;;;;;;;;;;;;;;517:63;750:1866:51;;-1:-1:-1;;;562:18:87;;444:1:96;;562:18:87;457:50;750:1866:51;;-1:-1:-1;;;492:15:87;;444:1:96;;492:15:87;337:60:96;750:1866:51;;;;;;;:::i;:::-;;;;;;;;;359:38:96;:::o;750:1866:51:-;;471:2:87;750:1866:51;;;;;;;:::o;:::-;444:1:96;750:1866:51;;;444:1:96;750:1866:51;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addDex(address)": "536db266",
    "setFunctionApprovalBySignature(bytes4)": "c561c148",
    "swapTokensGeneric(bytes32,string,string,address,uint256,(address,address,address,address,uint256,bytes,bool)[])": "4630a0d8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContractCallNotAllowed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"receivedAmount\",\"type\":\"uint256\"}],\"name\":\"CumulativeSlippageTooHigh\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NativeAssetTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSwapDataProvided\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoSwapFromZeroBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoTransferToNullAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullAddrIsNotAValidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NullAddrIsNotAnERC20Token\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SliceOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SliceOverflow\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dex\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromAssetId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toAssetId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AssetSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"integrator\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"referrer\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromAssetId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toAssetId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toAmount\",\"type\":\"uint256\"}],\"name\":\"GenericSwapCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"integrator\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"referrer\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"fromAssetId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"toAssetId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toAmount\",\"type\":\"uint256\"}],\"name\":\"SwappedGeneric\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receivingAssetId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TransferCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receivingAssetId\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TransferRecovered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"bridge\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"integrator\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"referrer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"hasSourceSwaps\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasDestinationCall\",\"type\":\"bool\"}],\"indexed\":false,\"internalType\":\"struct IStruct.BridgeData\",\"name\":\"bridgeData\",\"type\":\"tuple\"}],\"name\":\"TransferStarted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_dex\",\"type\":\"address\"}],\"name\":\"addDex\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"setFunctionApprovalBySignature\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_integrator\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_referrer\",\"type\":\"string\"},{\"internalType\":\"address payable\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"callTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approveTo\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sendingAssetId\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receivingAssetId\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"requiresDeposit\",\"type\":\"bool\"}],\"internalType\":\"struct LibSwap.SwapData[]\",\"name\":\"_swapData\",\"type\":\"tuple[]\"}],\"name\":\"swapTokensGeneric\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"LI.FI (https://li.fi)\",\"custom:version\":\"1.0.0\",\"details\":\"Uses calldata to execute APPROVED arbitrary methods on DEXs\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"swapTokensGeneric(bytes32,string,string,address,uint256,(address,address,address,address,uint256,bytes,bool)[])\":{\"params\":{\"_integrator\":\"the name of the integrator\",\"_minAmount\":\"the minimum amount of the final asset to receive\",\"_receiver\":\"the address to receive the swapped tokens into (also excess tokens)\",\"_referrer\":\"the address of the referrer\",\"_swapData\":\"an object containing swap related data to perform swaps before bridging\",\"_transactionId\":\"the transaction id associated with the operation\"}}},\"title\":\"Generic Swap Facet\",\"version\":1},\"userdoc\":{\"errors\":{\"ReentrancyError()\":[{\"notice\":\"Errors ///\"}]},\"events\":{\"TransferStarted((bytes32,string,string,address,address,address,uint256,uint256,bool,bool))\":{\"notice\":\"Events ///\"}},\"kind\":\"user\",\"methods\":{\"addDex(address)\":{\"notice\":\"External Methods ///\"},\"swapTokensGeneric(bytes32,string,string,address,uint256,(address,address,address,address,uint256,bytes,bool)[])\":{\"notice\":\"Performs multiple swaps in one transaction\"}},\"notice\":\"Provides functionality for swapping through ANY APPROVED DEX\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/app/facets/GenericSwapFacet.sol\":\"GenericSwapFacet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink-testing/=lib/foundry-chainlink-toolkit/lib/chainlink-testing-framework/contracts/ethereum/\",\":@chainlink/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/\",\":@openzeppelin/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/\",\":chainlink-testing-framework/=lib/foundry-chainlink-toolkit/lib/chainlink-testing-framework/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-stringutils/=lib/solidity-stringutils/\",\":solmate/=lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"src/Errors/GenericErrors.sol\":{\"keccak256\":\"0xdef34e4b82528d6d5d74d4c05dfd3fb708bbc5f3c3a1771551a15eff5af51ee1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f047b6a32dd1536c5dd46674958f0a424da9d668c4ae4515509cbf9568664fb\",\"dweb:/ipfs/QmXW4wngA2jmt9Jf235ctZKDWSWNaEH5mfJ5vvXJPYfqSv\"]},\"src/app/Helpers/ReentrancyGuard.sol\":{\"keccak256\":\"0xab4df2ec4a7e07ca78549d964a8d43182f1320914dff497bc7d5020bf1b5c526\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://150a8984b454d88e9eba9b191b819024c6a4bcabaaaa7c46d65aa491cb999f41\",\"dweb:/ipfs/QmPauivGxP2xVj8bakPwvpdnkdX7P4vV19snXeqnYCh4fk\"]},\"src/app/Helpers/SwapperV2.sol\":{\"keccak256\":\"0x54e190781adb88a54c9f192ce295ba9fb1047fba44c86c038c92cb165ecf6058\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ada2f31e0fc89d373d729b107aa78e53a70026dc6d8faab94419bb08da202ff\",\"dweb:/ipfs/QmcN28WBnd46hRQT39Xzvp7pZkDWbbA7gcapLrGNjmjqGt\"]},\"src/app/Helpers/Validatable.sol\":{\"keccak256\":\"0x85e08d0e1d711b40d9902345cfe97591cbecd488e2fb098fd6a8ee12eb998d7c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://a43d6e780e0e90a53d7c0a7777f55134206efe4fa6ca42563865e8720ca3fe0a\",\"dweb:/ipfs/QmQNx5XBXoVtVboeURJdBBi5MF3pAWF1VydfTfcYcH6u6P\"]},\"src/app/facets/GenericSwapFacet.sol\":{\"keccak256\":\"0xbc20bb8e4f7c4bb008f6f7968c0e52b0270245f2f45dd294f684ba6bbe2fe7b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5251780f7a3d393979eade00d057617e18d7cb647a0e4bc56c4dad2ffa250fef\",\"dweb:/ipfs/QmaF5u5du9FQfHEkkoAh2GeJQQrf2biv8EKkqLq1Xoo5N5\"]},\"src/app/interfaces/IStruct.sol\":{\"keccak256\":\"0xceb9a0c7d632c7e5f9720aa43843596057ad980773dce1a28f6cebf07f6e9c91\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://648da4bfee4f77d4dcacc212b2ff7d7ac25b951859705328d7775d411e99b28a\",\"dweb:/ipfs/QmTLJftQVSgdVTn51xhgz6TZStS9c3rCyyXZsvEwS2oBuE\"]},\"src/libraries/LibAllowList.sol\":{\"keccak256\":\"0x3eaa1e807df8ffb89eb90481ade1aa2c036c48419316c093df668d6fcc495db4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4dfb555cc07b0bd09cfa1129cb9f14b6690b1e0075acee6ab201613c3f4b417e\",\"dweb:/ipfs/QmbwpG6ed6FRdwsTUZ11kghQoJpMZztR6uGLkSZorp1sic\"]},\"src/libraries/LibAsset.sol\":{\"keccak256\":\"0x0f20f103f8b8d03ea6372fd7cc98fae649cfacc2a46ee715ee43e0a29d931fed\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://c9c29d03eb1cd1d25455b6cab8d39894d80c2a51c1e24e721ac16a8408d5280b\",\"dweb:/ipfs/QmXNs4miEbpXRnsFTxs9LtPAbajA4rFXfVpvwd6zCTTxY1\"]},\"src/libraries/LibBytes.sol\":{\"keccak256\":\"0x69948d5a572a7c10ba82507063ad1fe9255b7b2a4f4e993b76b700ddbcb48cd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c30a534494caaf03261b0627654377ea635d8030cfbd4836fcd603e6ecf90bf0\",\"dweb:/ipfs/QmeKs1osc1rhMMBVzDdFmzCCK6NQEipGt4C4XKdMyTTdWu\"]},\"src/libraries/LibSwap.sol\":{\"keccak256\":\"0x2c1b2d8f19732e1405a98d467310173dca825888ac547915e205d79852278a1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa18404bb1508ff487e9d15c94a8d7754fb2873923b06d5058906400c7401786\",\"dweb:/ipfs/QmYy8nTq3HRjuZ32uF7f8FhtNRW6BgKToh95vka4H4FbUf\"]},\"src/libraries/LibUtil.sol\":{\"keccak256\":\"0x20cf74a75d2b1274d648b88e174107b8e183ea3a347b342aa88cc1926d33face\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b22ed04029e7dc6597945ed9378d6321bcc5e90985c864a9850062340985a1\",\"dweb:/ipfs/Qmf86ngM2rjKGU8kFC8xR9KP7puzYKvPrTM5Tb2GnFC3Q5\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ContractCallNotAllowed"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "minAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "receivedAmount",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "CumulativeSlippageTooHigh"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedInnerCall"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "required",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidAmount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidContract"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InvalidReceiver"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NativeAssetTransferFailed"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoSwapDataProvided"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoSwapFromZeroBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NoTransferToNullAddress"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NullAddrIsNotAValidSpender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "NullAddrIsNotAnERC20Token"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyError"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SliceOutOfBounds"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "SliceOverflow"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "transactionId",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "dex",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "fromAssetId",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "toAssetId",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "fromAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "toAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AssetSwapped",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "transactionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "integrator",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "referrer",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "fromAssetId",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "toAssetId",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "fromAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "toAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "GenericSwapCompleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "transactionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "integrator",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "referrer",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "fromAssetId",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "toAssetId",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "fromAmount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "toAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SwappedGeneric",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "transactionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receivingAssetId",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferCompleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "transactionId",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "receivingAssetId",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferRecovered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct IStruct.BridgeData",
              "name": "bridgeData",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "transactionId",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "bridge",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "integrator",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "referrer",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sendingAssetId",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "minAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "destinationChainId",
                  "type": "uint256"
                },
                {
                  "internalType": "bool",
                  "name": "hasSourceSwaps",
                  "type": "bool"
                },
                {
                  "internalType": "bool",
                  "name": "hasDestinationCall",
                  "type": "bool"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransferStarted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_dex",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addDex"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_signature",
              "type": "bytes4"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFunctionApprovalBySignature"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_transactionId",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "_integrator",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_referrer",
              "type": "string"
            },
            {
              "internalType": "address payable",
              "name": "_receiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_minAmount",
              "type": "uint256"
            },
            {
              "internalType": "struct LibSwap.SwapData[]",
              "name": "_swapData",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "callTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "approveTo",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "sendingAssetId",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "receivingAssetId",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "fromAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "callData",
                  "type": "bytes"
                },
                {
                  "internalType": "bool",
                  "name": "requiresDeposit",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "swapTokensGeneric",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "swapTokensGeneric(bytes32,string,string,address,uint256,(address,address,address,address,uint256,bytes,bool)[])": {
            "params": {
              "_integrator": "the name of the integrator",
              "_minAmount": "the minimum amount of the final asset to receive",
              "_receiver": "the address to receive the swapped tokens into (also excess tokens)",
              "_referrer": "the address of the referrer",
              "_swapData": "an object containing swap related data to perform swaps before bridging",
              "_transactionId": "the transaction id associated with the operation"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addDex(address)": {
            "notice": "External Methods ///"
          },
          "swapTokensGeneric(bytes32,string,string,address,uint256,(address,address,address,address,uint256,bytes,bool)[])": {
            "notice": "Performs multiple swaps in one transaction"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink-testing/=lib/foundry-chainlink-toolkit/lib/chainlink-testing-framework/contracts/ethereum/",
        ":@chainlink/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/contracts/src/",
        ":@openzeppelin/=lib/foundry-chainlink-toolkit/lib/openzeppelin-contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":chainlink-brownie-contracts/=lib/foundry-chainlink-toolkit/lib/chainlink-brownie-contracts/",
        ":chainlink-testing-framework/=lib/foundry-chainlink-toolkit/lib/chainlink-testing-framework/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":foundry-chainlink-toolkit/=lib/foundry-chainlink-toolkit/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":solidity-stringutils/=lib/solidity-stringutils/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/app/facets/GenericSwapFacet.sol": "GenericSwapFacet"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "src/Errors/GenericErrors.sol": {
        "keccak256": "0xdef34e4b82528d6d5d74d4c05dfd3fb708bbc5f3c3a1771551a15eff5af51ee1",
        "urls": [
          "bzz-raw://8f047b6a32dd1536c5dd46674958f0a424da9d668c4ae4515509cbf9568664fb",
          "dweb:/ipfs/QmXW4wngA2jmt9Jf235ctZKDWSWNaEH5mfJ5vvXJPYfqSv"
        ],
        "license": "MIT"
      },
      "src/app/Helpers/ReentrancyGuard.sol": {
        "keccak256": "0xab4df2ec4a7e07ca78549d964a8d43182f1320914dff497bc7d5020bf1b5c526",
        "urls": [
          "bzz-raw://150a8984b454d88e9eba9b191b819024c6a4bcabaaaa7c46d65aa491cb999f41",
          "dweb:/ipfs/QmPauivGxP2xVj8bakPwvpdnkdX7P4vV19snXeqnYCh4fk"
        ],
        "license": "UNLICENSED"
      },
      "src/app/Helpers/SwapperV2.sol": {
        "keccak256": "0x54e190781adb88a54c9f192ce295ba9fb1047fba44c86c038c92cb165ecf6058",
        "urls": [
          "bzz-raw://0ada2f31e0fc89d373d729b107aa78e53a70026dc6d8faab94419bb08da202ff",
          "dweb:/ipfs/QmcN28WBnd46hRQT39Xzvp7pZkDWbbA7gcapLrGNjmjqGt"
        ],
        "license": "MIT"
      },
      "src/app/Helpers/Validatable.sol": {
        "keccak256": "0x85e08d0e1d711b40d9902345cfe97591cbecd488e2fb098fd6a8ee12eb998d7c",
        "urls": [
          "bzz-raw://a43d6e780e0e90a53d7c0a7777f55134206efe4fa6ca42563865e8720ca3fe0a",
          "dweb:/ipfs/QmQNx5XBXoVtVboeURJdBBi5MF3pAWF1VydfTfcYcH6u6P"
        ],
        "license": "UNLICENSED"
      },
      "src/app/facets/GenericSwapFacet.sol": {
        "keccak256": "0xbc20bb8e4f7c4bb008f6f7968c0e52b0270245f2f45dd294f684ba6bbe2fe7b9",
        "urls": [
          "bzz-raw://5251780f7a3d393979eade00d057617e18d7cb647a0e4bc56c4dad2ffa250fef",
          "dweb:/ipfs/QmaF5u5du9FQfHEkkoAh2GeJQQrf2biv8EKkqLq1Xoo5N5"
        ],
        "license": "MIT"
      },
      "src/app/interfaces/IStruct.sol": {
        "keccak256": "0xceb9a0c7d632c7e5f9720aa43843596057ad980773dce1a28f6cebf07f6e9c91",
        "urls": [
          "bzz-raw://648da4bfee4f77d4dcacc212b2ff7d7ac25b951859705328d7775d411e99b28a",
          "dweb:/ipfs/QmTLJftQVSgdVTn51xhgz6TZStS9c3rCyyXZsvEwS2oBuE"
        ],
        "license": "MIT"
      },
      "src/libraries/LibAllowList.sol": {
        "keccak256": "0x3eaa1e807df8ffb89eb90481ade1aa2c036c48419316c093df668d6fcc495db4",
        "urls": [
          "bzz-raw://4dfb555cc07b0bd09cfa1129cb9f14b6690b1e0075acee6ab201613c3f4b417e",
          "dweb:/ipfs/QmbwpG6ed6FRdwsTUZ11kghQoJpMZztR6uGLkSZorp1sic"
        ],
        "license": "MIT"
      },
      "src/libraries/LibAsset.sol": {
        "keccak256": "0x0f20f103f8b8d03ea6372fd7cc98fae649cfacc2a46ee715ee43e0a29d931fed",
        "urls": [
          "bzz-raw://c9c29d03eb1cd1d25455b6cab8d39894d80c2a51c1e24e721ac16a8408d5280b",
          "dweb:/ipfs/QmXNs4miEbpXRnsFTxs9LtPAbajA4rFXfVpvwd6zCTTxY1"
        ],
        "license": "UNLICENSED"
      },
      "src/libraries/LibBytes.sol": {
        "keccak256": "0x69948d5a572a7c10ba82507063ad1fe9255b7b2a4f4e993b76b700ddbcb48cd3",
        "urls": [
          "bzz-raw://c30a534494caaf03261b0627654377ea635d8030cfbd4836fcd603e6ecf90bf0",
          "dweb:/ipfs/QmeKs1osc1rhMMBVzDdFmzCCK6NQEipGt4C4XKdMyTTdWu"
        ],
        "license": "MIT"
      },
      "src/libraries/LibSwap.sol": {
        "keccak256": "0x2c1b2d8f19732e1405a98d467310173dca825888ac547915e205d79852278a1e",
        "urls": [
          "bzz-raw://fa18404bb1508ff487e9d15c94a8d7754fb2873923b06d5058906400c7401786",
          "dweb:/ipfs/QmYy8nTq3HRjuZ32uF7f8FhtNRW6BgKToh95vka4H4FbUf"
        ],
        "license": "MIT"
      },
      "src/libraries/LibUtil.sol": {
        "keccak256": "0x20cf74a75d2b1274d648b88e174107b8e183ea3a347b342aa88cc1926d33face",
        "urls": [
          "bzz-raw://a6b22ed04029e7dc6597945ed9378d6321bcc5e90985c864a9850062340985a1",
          "dweb:/ipfs/Qmf86ngM2rjKGU8kFC8xR9KP7puzYKvPrTM5Tb2GnFC3Q5"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/app/facets/GenericSwapFacet.sol",
    "id": 34144,
    "exportedSymbols": {
      "GenericSwapFacet": [
        34143
      ],
      "IStruct": [
        34689
      ],
      "InvalidReceiver": [
        32859
      ],
      "LibAllowList": [
        38349
      ],
      "LibAsset": [
        38834
      ],
      "LibSwap": [
        40364
      ],
      "LibUtil": [
        40421
      ],
      "ReentrancyGuard": [
        32965
      ],
      "SwapperV2": [
        33703
      ],
      "Validatable": [
        33854
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2585:51",
    "nodes": [
      {
        "id": 34010,
        "nodeType": "PragmaDirective",
        "src": "32:24:51",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 34012,
        "nodeType": "ImportDirective",
        "src": "58:50:51",
        "nodes": [],
        "absolutePath": "src/app/interfaces/IStruct.sol",
        "file": "../interfaces/IStruct.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34144,
        "sourceUnit": 34690,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34011,
              "name": "IStruct",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34689,
              "src": "66:7:51",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34014,
        "nodeType": "ImportDirective",
        "src": "109:52:51",
        "nodes": [],
        "absolutePath": "src/libraries/LibAsset.sol",
        "file": "src/libraries/LibAsset.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34144,
        "sourceUnit": 38835,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34013,
              "name": "LibAsset",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38834,
              "src": "117:8:51",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34016,
        "nodeType": "ImportDirective",
        "src": "162:63:51",
        "nodes": [],
        "absolutePath": "src/app/Helpers/ReentrancyGuard.sol",
        "file": "../Helpers/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34144,
        "sourceUnit": 32966,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34015,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32965,
              "src": "170:15:51",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34019,
        "nodeType": "ImportDirective",
        "src": "226:60:51",
        "nodes": [],
        "absolutePath": "src/app/Helpers/SwapperV2.sol",
        "file": "../Helpers/SwapperV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34144,
        "sourceUnit": 33704,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34017,
              "name": "SwapperV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33703,
              "src": "234:9:51",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 34018,
              "name": "LibSwap",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40364,
              "src": "245:7:51",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34021,
        "nodeType": "ImportDirective",
        "src": "287:55:51",
        "nodes": [],
        "absolutePath": "src/app/Helpers/Validatable.sol",
        "file": "../Helpers/Validatable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34144,
        "sourceUnit": 33855,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34020,
              "name": "Validatable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33854,
              "src": "295:11:51",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34023,
        "nodeType": "ImportDirective",
        "src": "343:50:51",
        "nodes": [],
        "absolutePath": "src/libraries/LibUtil.sol",
        "file": "src/libraries/LibUtil.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34144,
        "sourceUnit": 40422,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34022,
              "name": "LibUtil",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40421,
              "src": "351:7:51",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34025,
        "nodeType": "ImportDirective",
        "src": "394:61:51",
        "nodes": [],
        "absolutePath": "src/Errors/GenericErrors.sol",
        "file": "src/Errors/GenericErrors.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34144,
        "sourceUnit": 32898,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34024,
              "name": "InvalidReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32859,
              "src": "402:15:51",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34027,
        "nodeType": "ImportDirective",
        "src": "456:60:51",
        "nodes": [],
        "absolutePath": "src/libraries/LibAllowList.sol",
        "file": "src/libraries/LibAllowList.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34144,
        "sourceUnit": 38350,
        "symbolAliases": [
          {
            "foreign": {
              "id": 34026,
              "name": "LibAllowList",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 38349,
              "src": "464:12:51",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 34143,
        "nodeType": "ContractDefinition",
        "src": "750:1866:51",
        "nodes": [
          {
            "id": 34049,
            "nodeType": "FunctionDefinition",
            "src": "863:93:51",
            "nodes": [],
            "body": {
              "id": 34048,
              "nodeType": "Block",
              "src": "902:54:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34045,
                        "name": "_dex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34039,
                        "src": "944:4:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34042,
                        "name": "LibAllowList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38349,
                        "src": "912:12:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibAllowList_$38349_$",
                          "typeString": "type(library LibAllowList)"
                        }
                      },
                      "id": 34044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "925:18:51",
                      "memberName": "addAllowedContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38107,
                      "src": "912:31:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 34046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "912:37:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34047,
                  "nodeType": "ExpressionStatement",
                  "src": "912:37:51"
                }
              ]
            },
            "documentation": {
              "id": 34037,
              "nodeType": "StructuredDocumentation",
              "src": "834:24:51",
              "text": "External Methods ///"
            },
            "functionSelector": "536db266",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addDex",
            "nameLocation": "872:6:51",
            "parameters": {
              "id": 34040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34039,
                  "mutability": "mutable",
                  "name": "_dex",
                  "nameLocation": "887:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34049,
                  "src": "879:12:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "878:14:51"
            },
            "returnParameters": {
              "id": 34041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "902:0:51"
            },
            "scope": 34143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34061,
            "nodeType": "FunctionDefinition",
            "src": "962:128:51",
            "nodes": [],
            "body": {
              "id": 34060,
              "nodeType": "Block",
              "src": "1030:60:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34057,
                        "name": "_signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34051,
                        "src": "1072:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 34054,
                        "name": "LibAllowList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38349,
                        "src": "1040:12:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibAllowList_$38349_$",
                          "typeString": "type(library LibAllowList)"
                        }
                      },
                      "id": 34056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1053:18:51",
                      "memberName": "addAllowedSelector",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38279,
                      "src": "1040:31:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 34058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1040:43:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34059,
                  "nodeType": "ExpressionStatement",
                  "src": "1040:43:51"
                }
              ]
            },
            "functionSelector": "c561c148",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFunctionApprovalBySignature",
            "nameLocation": "971:30:51",
            "parameters": {
              "id": 34052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34051,
                  "mutability": "mutable",
                  "name": "_signature",
                  "nameLocation": "1009:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34061,
                  "src": "1002:17:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 34050,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1002:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1001:19:51"
            },
            "returnParameters": {
              "id": 34053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1030:0:51"
            },
            "scope": 34143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 34142,
            "nodeType": "FunctionDefinition",
            "src": "1606:1008:51",
            "nodes": [],
            "body": {
              "id": 34141,
              "nodeType": "Block",
              "src": "1931:683:51",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 34088,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34070,
                        "src": "1967:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 34086,
                        "name": "LibUtil",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40421,
                        "src": "1945:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibUtil_$40421_$",
                          "typeString": "type(library LibUtil)"
                        }
                      },
                      "id": 34087,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1953:13:51",
                      "memberName": "isZeroAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40420,
                      "src": "1945:21:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) pure returns (bool)"
                      }
                    },
                    "id": 34089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1945:32:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34094,
                  "nodeType": "IfStatement",
                  "src": "1941:87:51",
                  "trueBody": {
                    "id": 34093,
                    "nodeType": "Block",
                    "src": "1979:49:51",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 34090,
                            "name": "InvalidReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32859,
                            "src": "2000:15:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 34091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2000:17:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 34092,
                        "nodeType": "RevertStatement",
                        "src": "1993:24:51"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    34096
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34096,
                      "mutability": "mutable",
                      "name": "postSwapBalance",
                      "nameLocation": "2046:15:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 34141,
                      "src": "2038:23:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34095,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2038:7:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34103,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34098,
                        "name": "_transactionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34064,
                        "src": "2080:14:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 34099,
                        "name": "_minAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34072,
                        "src": "2096:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34100,
                        "name": "_swapData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34076,
                        "src": "2108:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SwapData_$40200_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct LibSwap.SwapData calldata[] calldata"
                        }
                      },
                      {
                        "id": 34101,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34070,
                        "src": "2119:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_SwapData_$40200_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct LibSwap.SwapData calldata[] calldata"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 34097,
                      "name": "_depositAndSwap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        33324,
                        33444
                      ],
                      "referencedDeclaration": 33324,
                      "src": "2064:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_array$_t_struct$_SwapData_$40200_calldata_ptr_$dyn_calldata_ptr_$_t_address_payable_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,uint256,struct LibSwap.SwapData calldata[] calldata,address payable) returns (uint256)"
                      }
                    },
                    "id": 34102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2064:65:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2038:91:51"
                },
                {
                  "assignments": [
                    34105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34105,
                      "mutability": "mutable",
                      "name": "receivingAssetId",
                      "nameLocation": "2147:16:51",
                      "nodeType": "VariableDeclaration",
                      "scope": 34141,
                      "src": "2139:24:51",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34104,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2139:7:51",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34113,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 34106,
                        "name": "_swapData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34076,
                        "src": "2166:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SwapData_$40200_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct LibSwap.SwapData calldata[] calldata"
                        }
                      },
                      "id": 34111,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 34110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 34107,
                            "name": "_swapData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34076,
                            "src": "2176:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_SwapData_$40200_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct LibSwap.SwapData calldata[] calldata"
                            }
                          },
                          "id": 34108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2186:6:51",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2176:16:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 34109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2195:1:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "2176:20:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2166:31:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapData_$40200_calldata_ptr",
                        "typeString": "struct LibSwap.SwapData calldata"
                      }
                    },
                    "id": 34112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2198:16:51",
                    "memberName": "receivingAssetId",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 40193,
                    "src": "2166:48:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2139:75:51"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 34117,
                        "name": "receivingAssetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34105,
                        "src": "2247:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34118,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34070,
                        "src": "2265:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 34119,
                        "name": "postSwapBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34096,
                        "src": "2276:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 34114,
                        "name": "LibAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38834,
                        "src": "2224:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibAsset_$38834_$",
                          "typeString": "type(library LibAsset)"
                        }
                      },
                      "id": 34116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2233:13:51",
                      "memberName": "transferAsset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 38816,
                      "src": "2224:22:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address payable,uint256)"
                      }
                    },
                    "id": 34120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2224:68:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34121,
                  "nodeType": "ExpressionStatement",
                  "src": "2224:68:51"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 34123,
                        "name": "_transactionId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34064,
                        "src": "2342:14:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 34124,
                        "name": "_integrator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34066,
                        "src": "2370:11:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 34125,
                        "name": "_referrer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34068,
                        "src": "2395:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 34126,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34070,
                        "src": "2418:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 34127,
                            "name": "_swapData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34076,
                            "src": "2441:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_SwapData_$40200_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct LibSwap.SwapData calldata[] calldata"
                            }
                          },
                          "id": 34129,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 34128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2451:1:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2441:12:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapData_$40200_calldata_ptr",
                            "typeString": "struct LibSwap.SwapData calldata"
                          }
                        },
                        "id": 34130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2454:14:51",
                        "memberName": "sendingAssetId",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40191,
                        "src": "2441:27:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34131,
                        "name": "receivingAssetId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34105,
                        "src": "2482:16:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 34132,
                            "name": "_swapData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34076,
                            "src": "2512:9:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_SwapData_$40200_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "struct LibSwap.SwapData calldata[] calldata"
                            }
                          },
                          "id": 34134,
                          "indexExpression": {
                            "hexValue": "30",
                            "id": 34133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2522:1:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2512:12:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapData_$40200_calldata_ptr",
                            "typeString": "struct LibSwap.SwapData calldata"
                          }
                        },
                        "id": 34135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2525:10:51",
                        "memberName": "fromAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40195,
                        "src": "2512:23:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34136,
                        "name": "postSwapBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34096,
                        "src": "2549:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 34122,
                      "name": "GenericSwapCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34672,
                      "src": "2308:20:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,string memory,string memory,address,address,address,uint256,uint256)"
                      }
                    },
                    "id": 34137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2308:266:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 34138,
                  "nodeType": "EmitStatement",
                  "src": "2303:271:51"
                },
                {
                  "expression": {
                    "id": 34139,
                    "name": "receivingAssetId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34105,
                    "src": "2591:16:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 34085,
                  "id": 34140,
                  "nodeType": "Return",
                  "src": "2584:23:51"
                }
              ]
            },
            "documentation": {
              "id": 34062,
              "nodeType": "StructuredDocumentation",
              "src": "1096:505:51",
              "text": "@notice Performs multiple swaps in one transaction\n @param _transactionId the transaction id associated with the operation\n @param _integrator the name of the integrator\n @param _referrer the address of the referrer\n @param _receiver the address to receive the swapped tokens into (also excess tokens)\n @param _minAmount the minimum amount of the final asset to receive\n @param _swapData an object containing swap related data to perform swaps before bridging"
            },
            "functionSelector": "4630a0d8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 34079,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34078,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1870:12:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32951,
                  "src": "1870:12:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "1870:12:51"
              },
              {
                "arguments": [
                  {
                    "id": 34081,
                    "name": "_receiver",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 34070,
                    "src": "1902:9:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 34082,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34080,
                  "name": "refundExcessNative",
                  "nameLocations": [
                    "1883:18:51"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 33224,
                  "src": "1883:18:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "1883:29:51"
              }
            ],
            "name": "swapTokensGeneric",
            "nameLocation": "1615:17:51",
            "parameters": {
              "id": 34077,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34064,
                  "mutability": "mutable",
                  "name": "_transactionId",
                  "nameLocation": "1650:14:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34142,
                  "src": "1642:22:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 34063,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1642:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34066,
                  "mutability": "mutable",
                  "name": "_integrator",
                  "nameLocation": "1690:11:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34142,
                  "src": "1674:27:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34065,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1674:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34068,
                  "mutability": "mutable",
                  "name": "_referrer",
                  "nameLocation": "1727:9:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34142,
                  "src": "1711:25:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 34067,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1711:6:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34070,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "1762:9:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34142,
                  "src": "1746:25:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 34069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1746:15:51",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34072,
                  "mutability": "mutable",
                  "name": "_minAmount",
                  "nameLocation": "1789:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34142,
                  "src": "1781:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34071,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1781:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34076,
                  "mutability": "mutable",
                  "name": "_swapData",
                  "nameLocation": "1837:9:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 34142,
                  "src": "1809:37:51",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SwapData_$40200_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct LibSwap.SwapData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34074,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 34073,
                        "name": "LibSwap.SwapData",
                        "nameLocations": [
                          "1809:7:51",
                          "1817:8:51"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40200,
                        "src": "1809:16:51"
                      },
                      "referencedDeclaration": 40200,
                      "src": "1809:16:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SwapData_$40200_storage_ptr",
                        "typeString": "struct LibSwap.SwapData"
                      }
                    },
                    "id": 34075,
                    "nodeType": "ArrayTypeName",
                    "src": "1809:18:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SwapData_$40200_storage_$dyn_storage_ptr",
                      "typeString": "struct LibSwap.SwapData[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1632:220:51"
            },
            "returnParameters": {
              "id": 34085,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34084,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34142,
                  "src": "1922:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34083,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1922:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1921:9:51"
            },
            "scope": 34143,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 34029,
              "name": "IStruct",
              "nameLocations": [
                "779:7:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34689,
              "src": "779:7:51"
            },
            "id": 34030,
            "nodeType": "InheritanceSpecifier",
            "src": "779:7:51"
          },
          {
            "baseName": {
              "id": 34031,
              "name": "ReentrancyGuard",
              "nameLocations": [
                "788:15:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32965,
              "src": "788:15:51"
            },
            "id": 34032,
            "nodeType": "InheritanceSpecifier",
            "src": "788:15:51"
          },
          {
            "baseName": {
              "id": 34033,
              "name": "SwapperV2",
              "nameLocations": [
                "805:9:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33703,
              "src": "805:9:51"
            },
            "id": 34034,
            "nodeType": "InheritanceSpecifier",
            "src": "805:9:51"
          },
          {
            "baseName": {
              "id": 34035,
              "name": "Validatable",
              "nameLocations": [
                "816:11:51"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33854,
              "src": "816:11:51"
            },
            "id": 34036,
            "nodeType": "InheritanceSpecifier",
            "src": "816:11:51"
          }
        ],
        "canonicalName": "GenericSwapFacet",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 34028,
          "nodeType": "StructuredDocumentation",
          "src": "518:232:51",
          "text": "@title Generic Swap Facet\n @author LI.FI (https://li.fi)\n @notice Provides functionality for swapping through ANY APPROVED DEX\n @dev Uses calldata to execute APPROVED arbitrary methods on DEXs\n @custom:version 1.0.0"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34143,
          33854,
          33703,
          32965,
          34689
        ],
        "name": "GenericSwapFacet",
        "nameLocation": "759:16:51",
        "scope": 34144,
        "usedErrors": [
          29451,
          29732,
          29737,
          29740,
          32829,
          32835,
          32845,
          32847,
          32853,
          32859,
          32865,
          32867,
          32869,
          32875,
          32877,
          32879,
          32913,
          38838,
          38840
        ],
        "usedEvents": [
          34630,
          34642,
          34654,
          34672,
          34688,
          40216
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 51
}